apiVersion: batch/v1
kind: Job
spec:
  template:
    spec:
      restartPolicy: Never
      volumes:
      - name: shared
        emptyDir: {}
      - name: splitgraph
        secret:
          secretName: splitgraph
      containers:
        - name: flow
          imagePullPolicy: Always
          command:
          - /bin/sh
          - -c
          - >-
            trap "rm /tmp/pod/main-executing" EXIT;
            while :; do echo 'waiting sgr'; sleep 3; if [ -f "/tmp/pod/sgr-executing" ]; then break; fi done;
            $0 $@
          env:
          - name: SG_CONFIG_FILE
            value: /var/splitgraph/.sgconfig
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", 'touch /tmp/pod/main-executing']
          volumeMounts:
          - name: shared
            mountPath: /tmp/pod
          - name: splitgraph
            mountPath: /var/splitgraph
        - name: sgr
          image: splitgraph/engine
          imagePullPolicy: Always
          ports:
          - name: postgres
            containerPort: 5432
            protocol: TCP
          env:
          - name: POSTGRES_PASSWORD
            value: supersecure
          - name: SG_CONFIG_FILE
            value: /var/splitgraph/.sgconfig
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", 'sgr init; touch /tmp/pod/sgr-executing']
          livenessProbe:
            exec:
              command:
              - cat
              - /tmp/pod/main-executing
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
          - name: shared
            mountPath: /tmp/pod
          - name: splitgraph
            mountPath: /var/splitgraph
